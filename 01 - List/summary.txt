Ringkasan Petualangan Python Hari Ini! ðŸš€
Hari ini kamu sudah berhasil menaklukkan salah satu bagian terpenting di Python, yaitu List. 
Anggap saja kamu sudah mendapatkan "kantong ajaib" baru untuk menyimpan data!

Berikut adalah kekuatan super yang sudah kamu kuasai:
#######################################################
1. Membuat "Kantong Ajaib" (List)
Kamu belajar cara membuat list, si wadah serbaguna. Kamu juga sadar kalau list ini sangat fleksibel, 
bisa diisi berbagai macam data (teks dan angka), bahkan bisa diisi "kantong" lain di dalamnya (list di dalam list).

### python
# Dari list biasa...
areas = ["hallway", 11.25, "kitchen", 18.0]  

# ...hingga list yang lebih kompleks!
house = [["hallway", 11.25], ["kitchen", 18.0]]

#########################################################3
2. Mengintip & Mengambil Isi Kantong (Indexing & Slicing)
Kamu sekarang bisa mengambil barang dari kantongmu dengan tepat.

Indexing [ ]: Seperti mengambil satu barang dari rak berdasarkan nomor urutnya. 
Kamu bahkan sudah jago menggunakan nomor urut dari depan (indeks positif) dan dari belakang (indeks negatif).

Slicing [:]: Seperti memotong kue. Kamu bisa mengambil beberapa potong sekaligus untuk membuat "piring" baru 
berisi potongan kue tersebut.

python

# Mengambil satu item
print(areas[1]) # -> 11.25

# Mengambil beberapa item sekaligus
downstairs = areas[:6]

#################################################################

3. Mengubah Isi Kantong (Manipulasi List)
Kantong ajaibmu tidak permanen! Kamu sudah belajar cara memodifikasinya:

Mengganti Barang: areas[4] = "chill zone"

Menambah Barang Baru: areas_baru = areas + ["garage", 15.45]

Membuang Barang: del(areas[10:12])

###################################################################
4. Konsep Kunci: Fotokopi vs. Cermin (Menyalin List)
Ini adalah bagian paling penting! Kamu belajar perbedaan besar antara membuat "cermin" dan "fotokopi".

areas_copy = areas (Ini Cermin): Mengubah areas_copy, maka areas ikut berubah.

areas_copy = areas[:] (Ini Fotokopi): Kamu membuat salinan baru yang independen. 
Mengubah areas_copy tidak akan memengaruhi areas yang asli.

Selamat! Kamu sudah menguasai dasar-dasar fundamental dalam memanipulasi data di Python. 
Ini adalah fondasi yang sangat kuat untuk belajar hal-hal yang lebih canggih. Terus semangat! ðŸ”¥